class Solution {
    public String shortestCommonSupersequence(String str1, String str2) {
        int m = str1.length();
        int n = str2.length();

// Here the method is that first we calculate the lcs matrix of both the stirngs
// what we do is basically travaerse until both of them become 0 ,0(i,j) if equal we decrement by i--,j-- if not we check the verticallyabove and horizontally left box then we decide which one isgreater and move accordingly also if we move vertical we need to add i-1th of str1 character and j-1th of str2.



        int dp[][] = new int[m+1][n+1];
        for(int i=1;i<=m;i++){
            for(int j =1;j<=n;j++){
                if(str1.charAt(i-1)==str2.charAt(j-1)){
                    dp[i][j]=1+dp[i-1][j-1];
                }
                else{
                    dp[i][j]=Math.max(dp[i-1][j],dp[i][j-1]);
                }
            }
        }
        StringBuilder sb = new StringBuilder("");
        int i = m;
        int j = n;
        while(i>0 && j>0){
            if(str1.charAt(i-1)==str2.charAt(j-1)){
                sb.append(str1.charAt(i-1));
                i--;
                j--;
            }
            else if(dp[i-1][j]>=dp[i][j-1]){
                sb.append(str1.charAt(i-1));
                i--; 
            }
            else{
                 sb.append(str2.charAt(j-1));
                 j--;
            }

        }

     while(i>0){
                sb.append(str1.charAt(i-1));
                i--;
            }
            while(j>0){
                 sb.append(str2.charAt(j-1));
                 j--;
            }



         return sb.reverse().toString();
    }
}
